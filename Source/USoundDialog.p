unit USoundDialog;interface	uses		UMapCells;	procedure IUSoundDialog;	function EditSoundArea (var code: MapCell): boolean;implementation	uses		UDialog;	const		soundAreaDlogID = 130;		soundAreaItem = 3;		removeItem = 4;		soundAreaRangeAlrtID = 142;	var		gLastSoundAreaNumber: integer;	procedure IUSoundDialog;	begin		gLastSoundAreaNumber := 1;	end;	function EditSoundArea (var code: MapCell): boolean;		var			dlog: TDialog;			newArea: longint;	begin		new(dlog);		dlog.IGetNewDialog(soundAreaDlogID);		dlog.SetDismissItems([ok, cancel, removeItem]);		if code.area <> 0 then			dlog.SetItemNum(soundAreaItem, code.area)		else			dlog.SetItemNum(soundAreaItem, gLastSoundAreaNumber);		dlog.SelItemText(soundAreaItem, 0, 32767);		while true do			case dlog.DoModalDialog of				ok: 					if dlog.GetItemNumInRange(soundAreaItem, newArea, 1, 64) then begin							code.area := newArea;							gLastSoundAreaNumber := newArea;							EditSoundArea := true;							leave;						end					else						DoAlert(soundAreaRangeAlrtID);				cancel:  begin						EditSoundArea := false;						leave;					end;				removeItem:  begin						code.area := 0;						EditSoundArea := true;						leave;					end;				otherwise					;			end;		dlog.Free;	end;end.