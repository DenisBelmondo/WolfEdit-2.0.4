program WolfMap;	uses		HexIO, UMapParams, ULevel, UMapBlocks, {}		UGoof, UMapView;	const		fileName = '::Wolf 3dª Hacking Copy';	type		TWolfMapApp = object(TApplication)			end;	var		resFile: integer;		gWolfMapApp: TWolfMapApp;	procedure Check (result: OSErr);	begin		if result <> noErr then begin				ShowText;				writeln('Error number ', result : 1);				ExitToShell;			end;	end;	procedure MapALevel;		var			n: integer;			h: Handle;			view: TMapView;			reply: StandardFileReply;			types: SFTypeList;	begin		types[0] := 'APPL';		types[1] := 'MAPS';		types[2] := 'W3dL';		StandardGetFile(nil, 3, types, reply);		if reply.sfGood then begin				resFile := FSpOpenResFile(reply.sfFile, fsRdPerm);				Check(ResError);				n := 1;				h := GetResource('BRGR', 200 + n - 1);				Check(ResError);				new(view);				view.IMapView(LevelHandle(h));				view.MakeOwnWindow;			end;	end;begin	IMapParams;	new(gWolfMapApp);	gWolfMapApp.IApplication('W3dM');	MapALevel;	gWolfMapApp.Run;	CloseResFile(resFile);end.