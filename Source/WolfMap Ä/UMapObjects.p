unit UMapObjects;interface	uses		HexIO, UMapParams, ULevel, UDrawing;	procedure MapObjects (h: LevelHandle;									layers: MapLayers;									minRow, maxRow, minCol, maxCol: integer);implementation	function InRange (i, lo, hi: integer): boolean;	begin		InRange := (lo <= i) & (i <= hi);	end;	procedure MapObjects (h: LevelHandle;									layers: MapLayers;									minRow, maxRow, minCol, maxCol: integer);		var			obj: ObjectEntry;			stop: boolean;			x, y: integer;			s: string[4];			p: longint;	begin		if objCodeLayer in layers then begin				p := 0;				stop := false;				while GetObject(h, p, obj) do begin						if InRange(obj.x, minCol, maxCol) & InRange(obj.y, minRow, maxRow) then begin								x := margin + obj.x * cellSize + 3 * cellSize div 4;								y := margin + obj.y * cellSize + 3 * cellSize div 4;								MoveTo(x, y);								s := Hex(obj.code, 2);								if obj.code = $62 then									insert(Hex(obj.code2, 2), s, length(s) + 1);								RingText(s);							end;					end;			end;	end;end.