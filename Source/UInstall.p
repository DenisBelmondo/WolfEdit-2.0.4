unit UInstall;interface	procedure GetInstallFile (var reply: SFreply);	procedure GetNewInstallFile (var reply: SFreply);	procedure GetWolfFile (var reply: SFreply);	procedure IUInstall;implementation	uses		UGoof;	const		wolfCreator = 'WOLF';		origWolfName = 'Wolfenstein 3Dª First Encounter';		installInOrigWarnAlrtID = 133;	var		gInstallReply: SFReply;	procedure GetInstallFile (var reply: SFreply);	begin		if gInstallReply.good then			reply := gInstallReply		else			GetNewInstallFile(reply);	end;	procedure GetNewInstallFile (var reply: SFreply);	begin		GetWolfFile(reply);		if reply.good then			gInstallReply := reply;	end;	function WolfFilter (p: ParmBlkPtr): boolean;	begin		WolfFilter := p^.ioFlFndrInfo.fdCreator <> wolfCreator;	end;	procedure GetWolfFile (var reply: SFreply);		var			where: Point;			typeList: SFTypeList;			fileFilter: ProcPtr;	begin		SetPt(where, 100, 100);		typeList[0] := 'APPL';		typeList[1] := 'adrp';	{Alias to application has this type}		fileFilter := @WolfFilter;		SFGetFile(where, '', fileFilter, 2, typeList, nil, reply);		if reply.good & (reply.fName = origWolfName) then			if Ask(installInOrigWarnAlrtID) <> ok then				reply.good := false;	end;	procedure IUInstall;	begin		gInstallReply.good := false;	end;end.